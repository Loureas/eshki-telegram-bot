import requests
from aiogram import types
from config import dp, bot
from bs4 import BeautifulSoup
from keyboards import *


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer("""
–ü—Ä–∏–≤–µ—Ç!
–° –ø–æ–º–æ—â—å—é –º–µ–Ω—è —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∏—â–µ–≤—ã—Ö –¥–æ–±–∞–≤–∫–∞—Ö üß™

–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–æ–º–µ—Ä –ø–∏—â–µ–≤–æ–π –¥–æ–±–∞–≤–∫–∏ –∏ —è –ø—Ä–∏—à–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–π.
""")


@dp.message_handler(content_types=types.ContentTypes.TEXT)
async def pars(message: types.Message):
    try:
        if int(message.text):
            URL = f'https://dobavkam.net/additives/e{message.text}'
            page = requests.get(URL)
            page = BeautifulSoup(page.text, 'lxml')
            try:
                # –ü—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ
                item = page.find('div', class_='addheader__right-top')
                text = item.text.split('\n')
                origins = ''; n = 0
                for i in text:
                    if i != '':
                        if n == 0:
                            origins += i[0:-14].lower()
                        else:
                            origins += ', ' + i[0:-14].lower()
                        n += 1

                # –û–ø–∞—Å–Ω–æ—Å—Ç—å
                danger = page.find('div', class_='addprop--danger')
                danger = danger.text.strip()[0:-9].lower()

                # –ö–∞—Ç–µ–≥–æ—Ä–∏—è
                category = page.find('div', class_='addprop--category')
                category = category.text.strip().lower()

                menu = MainMenuKeyboards.main_menu(message.text)
                await message.answer(f"""
üß™ –î–æ–±–∞–≤–∫–∞: E{message.text}

üóÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}
üå± –ü—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ: {origins}
‚ö†Ô∏è –û–ø–∞—Å–Ω–æ—Å—Ç—å: {danger}
""", reply_markup=menu)
            except AttributeError:
                await message.answer(f'–î–æ–±–∞–≤–∫–∞ {message.text} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.')
    except ValueError:
        await message.answer('–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–±–∞–≤–∫–µ, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –µ—ë –Ω–æ–º–µ—Ä.')



class Buttons:

    # –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    @dp.callback_query_handler(lambda c: c.data[0:8] == 'all_info')
    async def all_info_button(callback_query: types.CallbackQuery):
        num = callback_query.data.split('_')[2]
        URL = f'https://dobavkam.net/additives/e{num}'
        page = requests.get(URL)
        page = BeautifulSoup(page.text, 'lxml')
        info = page.find('div', class_='field field--block field--additive-info')
        all_info = info.text.split('–í–ª–∏—è–Ω–∏–µ –Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–º')
        menu = MainMenuKeyboards.all_info_menu(num)
        await bot.answer_callback_query(callback_query.id)
        await bot.edit_message_text(all_info[0], callback_query.from_user.id, callback_query.message.message_id, reply_markup=menu)

    # –ü–æ–ª—å–∑–∞
    @dp.callback_query_handler(lambda c: c.data[0:7] == 'benefit')
    async def benefit_button(callback_query: types.CallbackQuery):
        num = callback_query.data.split('_')[1]
        URL = f'https://dobavkam.net/additives/e{num}'
        page = requests.get(URL)
        page = BeautifulSoup(page.text, 'lxml')
        info = page.find('div', class_='field field--block field--additive-info')
        try:
            all_info = info.text.split('–í—Ä–µ–¥')[0]
            benefit = all_info.split('–ü–æ–ª—å–∑–∞')[1]
            menu = MainMenuKeyboards.benefit_menu(num)
        except:
            try:
                all_info = info.text.split('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ')[0]
                benefit = all_info.split('–ü–æ–ª—å–∑–∞')[1]
            except:
                benefit = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.'
        menu = MainMenuKeyboards.benefit_menu(num)
        await bot.answer_callback_query(callback_query.id)
        await bot.edit_message_text(benefit, callback_query.from_user.id, callback_query.message.message_id, reply_markup=menu)

    # –í—Ä–µ–¥
    @dp.callback_query_handler(lambda c: c.data[0:4] == 'harm')
    async def benefit_button(callback_query: types.CallbackQuery):
        num = callback_query.data.split('_')[1]
        URL = f'https://dobavkam.net/additives/e{num}'
        page = requests.get(URL)
        page = BeautifulSoup(page.text, 'lxml')
        info = page.find('div', class_='field field--block field--additive-info')
        try:
            all_info = info.text.split('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ')[0]
            harm = all_info.split('–í—Ä–µ–¥')[1]
        except:
            try:
                all_info = info.text.split('–ü–æ–ª—å–∑–∞')[0]
                harm = all_info.split('–í—Ä–µ–¥')[1]
            except:
                harm = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.'
        menu = MainMenuKeyboards.harm_menu(num)
        await bot.answer_callback_query(callback_query.id)
        await bot.edit_message_text(harm, callback_query.from_user.id, callback_query.message.message_id, reply_markup=menu)

    # –û –¥–æ–±–∞–≤–∫–µ
    @dp.callback_query_handler(lambda c: c.data[0:9] == 'main_menu')
    async def back_supple(callback_query: types.CallbackQuery):
        num = callback_query.data.split('_')[2]
        URL = f'https://dobavkam.net/additives/e{num}'
        page = requests.get(URL)
        page = BeautifulSoup(page.text, 'lxml')

        # –ü—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ
        item = page.find('div', class_='addheader__right-top')
        text = item.text.split('\n')
        origins = ''; n = 0
        for i in text:
            if i != '':
                if n == 0:
                    origins += i[0:-14].lower()
                else:
                    origins += ', ' + i[0:-14].lower()
                n += 1

        # –û–ø–∞—Å–Ω–æ—Å—Ç—å
        danger = page.find('div', class_='addprop--danger')
        danger = danger.text.strip()[0:-9].lower()

        # –ö–∞—Ç–µ–≥–æ—Ä–∏—è
        category = page.find('div', class_='addprop--category')
        category = category.text.strip().lower()

        menu = MainMenuKeyboards.main_menu(num)
        await bot.edit_message_text(f"""
üß™ –î–æ–±–∞–≤–∫–∞: E{num}

üóÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}
üå± –ü—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ: {origins}
‚ö†Ô∏è –û–ø–∞—Å–Ω–æ—Å—Ç—å: {danger}
""", callback_query.from_user.id, callback_query.message.message_id, reply_markup=menu)


